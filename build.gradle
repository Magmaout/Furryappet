plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
}

base {
    archivesName = rootProject.name
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
        }

        client {
            property 'forge.enabledGameTestNamespaces', project.name
        }

        server {
            args '--nogui'
            property 'forge.enabledGameTestNamespaces', project.name
        }
    }
}

repositories {
    mavenCentral()
    maven { url = "https://maven.cleanroommc.com" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    compileOnly files("run/mods/blockbuster-2.6.1-1.12.2-dev.jar")
    compileOnly files("run/mods/metamorph-1.3.1-1.12.2-dev.jar")
    compileOnly files("run/mods/mclib-2.4.2-1.12.2-dev.jar")
    compileOnly files("run/mods/nashorn.jar")
}

jar {
    manifest {
        attributes([
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : project.version,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

jar.finalizedBy('reobfJar')

processResources {
    inputs.properties([
        "name": project.name,
        "version": project.version,
        "modid": rootProject.name
    ])

    filesMatching("mcmod.info") {
        expand inputs.properties
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceSets.main.resources.srcDir 'src/main/resources'

/* Dev build */
task deobfJar(type: Jar) {
    from sourceSets.main.output
    archiveBaseName = "dev"
    //classifier = 'dev'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveBaseName = "sources"
}

artifacts {
    archives deobfJar
    archives sourcesJar
}